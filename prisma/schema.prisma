// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String?  @unique
  password  String
  role      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SchoolLevel {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  classes   Class[]
}

model Class {
  id            Int         @id @default(autoincrement())
  name          String
  schoolLevel   SchoolLevel @relation(fields: [schoolLevelId], references: [id])
  schoolLevelId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  students      Student[]
}

model Student {
  id          Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  dateOfBirth DateTime
  class       Class    @relation(fields: [classId], references: [id])
  classId     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  grades      Grade[]
}

model Subject {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  grades    Grade[]
}

model Grade {
  id        Int      @id @default(autoincrement())
  value     Float
  student   Student  @relation(fields: [studentId], references: [id])
  studentId Int
  subject   Subject  @relation(fields: [subjectId], references: [id])
  subjectId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
